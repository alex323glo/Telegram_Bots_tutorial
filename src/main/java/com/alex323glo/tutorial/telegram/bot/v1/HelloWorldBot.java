package com.alex323glo.tutorial.telegram.bot.v1;

import org.telegram.telegrambots.api.methods.send.SendMessage;
import org.telegram.telegrambots.api.objects.Message;
import org.telegram.telegrambots.api.objects.Update;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.exceptions.TelegramApiException;

/**
 * My test "Hello, World!" Telegram bot.
 *
 * @author alex323glo
 * @version 0.1.0
 *
 * @see TelegramLongPollingBot
 */
public class HelloWorldBot extends TelegramLongPollingBot {
    /**
     * Sends Message, filling it with String text before.
     *
     * @param message message, needed to be send.
     * @param text String text, needed to be inserted into message (first param) and send.
     *
     * @see Message
     */
    private void sendMessage(Message message, String text) {
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(message.getChatId());
        sendMessage.setText(text);

        try {
            sendMessage(sendMessage);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    /**
     * Simply reacts on received "/start" Message - sends "Hello, World!" response.
     *
     * @param message Message, extracted from received Update object.
     *
     * @see Message
     */
    private void reactOnMessage(Message message) {
        if (message.getText().equals("/start")) {
            sendMessage(message, "Hello, world! This is simple test bot! \n(Created by alex323glo)");
        }
    }

    /**
     * This method is called when receiving updates via GetUpdates method
     *
     * @param update Update received
     */
    @Override
    public void onUpdateReceived(Update update) {
        reactOnMessage(update.getMessage());
    }

    /**
     * Return username of current bot.
     * <br>
     * WARNING: username should be generated by "@BotFather"
     * Telegram bot after /newbot command!
     *
     * @return String username of this bot.
     */
    @Override
    public String getBotUsername() {
        return "USERNAME";  // TODO paste real! username
    }

    /**
     * Returns the token of the bot to be able to perform Telegram Api Requests.
     * <br>
     * WARNING: token should be generated by "@BotFather"
     * Telegram bot after /newbot command!
     *
     * @return String Token of the bot.
     */
    @Override
    public String getBotToken() {
        return "TOKEN";     // TODO paste real! token
    }
}
